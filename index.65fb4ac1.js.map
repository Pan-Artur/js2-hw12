{"mappings":"AC8CA,IA9CA,MACE,YAAY,CAAA,SAAE,CAAQ,CAAA,WAAE,CAAU,CAAE,CAAE,CACpC,IAAI,CAAC,QAAQ,CAAG,EAChB,IAAI,CAAC,UAAU,CAAG,EAElB,IAAI,CAAC,OAAO,CAAG,SAAS,aAAa,CAAC,IAAI,CAAC,QAAQ,EACnD,IAAI,CAAC,MAAM,CAAG,SAAS,aAAa,CAAC,uBACrC,IAAI,CAAC,OAAO,CAAG,SAAS,aAAa,CAAC,wBACtC,IAAI,CAAC,MAAM,CAAG,SAAS,aAAa,CAAC,uBACrC,IAAI,CAAC,MAAM,CAAG,SAAS,aAAa,CAAC,uBAErC,IAAI,CAAC,QAAQ,EACf,CAEA,UAAW,CACT,IAAI,CAAC,WAAW,GAChB,IAAI,CAAC,QAAQ,CAAG,YAAY,KAC1B,IAAI,CAAC,WAAW,EAClB,EAAG,IACL,CAEA,aAAc,CACZ,IAAM,EAAc,IAAI,KAClB,EAAO,IAAI,CAAC,UAAU,CAAG,EAE3B,GAAQ,IACV,cAAc,IAAI,CAAC,QAAQ,EAC3B,IAAI,CAAC,WAAW,CAAC,CAAE,KAAM,EAAG,MAAO,EAAG,KAAM,EAAG,KAAM,CAAE,IAGzD,IAAM,EAAO,KAAK,KAAK,CAAC,EAAQ,OAC1B,EAAQ,KAAK,KAAK,CAAE,EAAQ,MAAyB,MACrD,EAAO,KAAK,KAAK,CAAE,EAAQ,KAAoB,KAC/C,EAAO,KAAK,KAAK,CAAE,EAAQ,IAAc,KAE/C,IAAI,CAAC,WAAW,CAAC,CAAE,KAAA,EAAM,MAAA,EAAO,KAAA,EAAM,KAAA,CAAK,EAC7C,CAEA,YAAY,CAAA,KAAE,CAAI,CAAA,MAAE,CAAK,CAAA,KAAE,CAAI,CAAA,KAAE,CAAI,CAAE,CAAE,CACvC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAG,EAC1B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAG,EAAM,QAAQ,GAAG,QAAQ,CAAC,EAAG,KACxD,IAAI,CAAC,MAAM,CAAC,WAAW,CAAG,EAAK,QAAQ,GAAG,QAAQ,CAAC,EAAG,KACtD,IAAI,CAAC,MAAM,CAAC,WAAW,CAAG,EAAK,QAAQ,GAAG,QAAQ,CAAC,EAAG,IACxD,CACF,EAEmB,CACjB,SAAU,WACV,WAAY,IAAI,KAAK,eACvB","sources":["<anon>","src/index.js"],"sourcesContent":["var $35da740d59af89ba$exports = {};\nclass $35da740d59af89ba$var$CountdownTimer {\n    constructor({ selector: selector, targetDate: targetDate }){\n        this.selector = selector;\n        this.targetDate = targetDate;\n        this.timerEl = document.querySelector(this.selector);\n        this.daysEl = document.querySelector('[data-value=\"days\"]');\n        this.hoursEl = document.querySelector('[data-value=\"hours\"]');\n        this.minsEl = document.querySelector('[data-value=\"mins\"]');\n        this.secsEl = document.querySelector('[data-value=\"secs\"]');\n        this.runTimer();\n    }\n    runTimer() {\n        this.updateTimer();\n        this.interval = setInterval(()=>{\n            this.updateTimer();\n        }, 1000);\n    }\n    updateTimer() {\n        const currentTime = new Date();\n        const time = this.targetDate - currentTime;\n        if (time <= 0) {\n            clearInterval(this.interval);\n            this.renderTimer({\n                days: 0,\n                hours: 0,\n                mins: 0,\n                secs: 0\n            });\n        }\n        const days = Math.floor(time / 86400000);\n        const hours = Math.floor(time % 86400000 / 3600000);\n        const mins = Math.floor(time % 3600000 / 60000);\n        const secs = Math.floor(time % 60000 / 1000);\n        this.renderTimer({\n            days: days,\n            hours: hours,\n            mins: mins,\n            secs: secs\n        });\n    }\n    renderTimer({ days: days, hours: hours, mins: mins, secs: secs }) {\n        this.daysEl.textContent = days;\n        this.hoursEl.textContent = hours.toString().padStart(2, \"0\");\n        this.minsEl.textContent = mins.toString().padStart(2, \"0\");\n        this.secsEl.textContent = secs.toString().padStart(2, \"0\");\n    }\n}\nnew $35da740d59af89ba$var$CountdownTimer({\n    selector: \"#timer-1\",\n    targetDate: new Date(\"Jul 17, 2025\")\n});\n\n\n//# sourceMappingURL=index.65fb4ac1.js.map\n","class CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n\n    this.timerEl = document.querySelector(this.selector);\n    this.daysEl = document.querySelector('[data-value=\"days\"]');\n    this.hoursEl = document.querySelector('[data-value=\"hours\"]');\n    this.minsEl = document.querySelector('[data-value=\"mins\"]');\n    this.secsEl = document.querySelector('[data-value=\"secs\"]');\n\n    this.runTimer();\n  }\n\n  runTimer() {\n    this.updateTimer();\n    this.interval = setInterval(() => {\n      this.updateTimer();\n    }, 1000);\n  }\n\n  updateTimer() {\n    const currentTime = new Date();\n    const time = this.targetDate - currentTime;\n\n    if (time <= 0) {\n      clearInterval(this.interval);\n      this.renderTimer({ days: 0, hours: 0, mins: 0, secs: 0 });\n    }\n\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n    const secs = Math.floor((time % (1000 * 60)) / 1000);\n\n    this.renderTimer({ days, hours, mins, secs });\n  }\n\n  renderTimer({ days, hours, mins, secs }) {\n    this.daysEl.textContent = days;\n    this.hoursEl.textContent = hours.toString().padStart(2, \"0\");\n    this.minsEl.textContent = mins.toString().padStart(2, \"0\");\n    this.secsEl.textContent = secs.toString().padStart(2, \"0\");\n  }\n}\n\nnew CountdownTimer({\n  selector: \"#timer-1\",\n  targetDate: new Date(\"Jul 17, 2025\"), // Якщо що я змінив дату, так як таймер працював з від'ємними числами\n});\n"],"names":["constructor","selector","targetDate","timerEl","document","querySelector","daysEl","hoursEl","minsEl","secsEl","runTimer","updateTimer","interval","setInterval","currentTime","Date","time","clearInterval","renderTimer","days","hours","mins","secs","Math","floor","textContent","toString","padStart"],"version":3,"file":"index.65fb4ac1.js.map"}